# # if文で=~を使うとマッチしたかどうかを判別できる
# if '123-4567'=~ /\d{3}-d{4}/
#     p 'マッチしました'
# else 
#     puts 'マッチしませんでした'
# end

text = '私の誕生日は1991年10月5日です。'
m = /(?<year>\d+)年(?<month>\d+)月(?<day>\d+)日/.match(text)
#シンボルで名前を指定してキャプチャの結果を取得する
# p m[:year]
# p m[:month]
# p m[:day]
# # 連番で指定もできる
# p m[2]

# text = '私の誕生日は1991年10月5日です。'
# # キャプチャの名前がそのままローカル変数に割り当てられる
# if  /(?<year>\d+)年(?<month>\d+)月(?<day>\d+)日/ =~ text
#     puts "#{year}/#{month}/#{day}"
# end

text = '私の誕生日は1991年10月5日です。'

# =~やmatchメソッドを使うとマッチした結果が組込み変数に使われる
text =~ /(\d+)年(\d+)月(\d+)日/

# MatchDataオブジェクトを取得する
$~ 

#scanメソッドは引数で渡した正規表現にマッチする部分を配列に格納して返す
'123 456 789'.scan(/\d+/)

# [], slice, slice! 
# []に正規表現を渡すと、、文字列から正規表現にマッチした部分を抜き出す
text = '郵便番号は123-4567です'
text[/\d{3}-\d{4}/]

text = '郵便番号は123-4567です'
text.slice(/\d{3}-\d{4}/)

# split
# マッチした文字列を区切り文字にして文字列を分解し、配列として返す
text = '123,456-789'
# 文字列で区切り文字を指定する
text.split(',')

# 正規表現を使ってカンマまたはハイフンを区切り文字に指定
text.split(/.|-/)


#gsubメソッドは、第1引数に文字列を渡すと、完全一致する文字列を第2引数の文字列で置き換える
text = '123,456-789'
text.gsub(',',':')

# 正規表現を渡すと、マッチした部分を第2引数で置き換える
text.gsub(/,|-/, ':')
